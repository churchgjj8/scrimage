name: build_test

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '*.md'
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Run tests
        run: ./gradlew check

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

      -  name: Generate build number
         if: success()
         uses: einaregilsson/build-number@v2
         with:
           token: ${{secrets.github_token}}

      -  name: Upload build number
         if: success()
         uses: actions/upload-artifact@v1
         with:
           name: BUILD_NUMBER
           path: BUILD_NUMBER

  deploy-linux-and-common:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Download build number
        uses: actions/download-artifact@v1
        with:
          name: BUILD_NUMBER

      - name: Restore build number
        id: buildnumber
        uses: einaregilsson/build-number@v2

      - name: deploy to sonatype snapshots
        run: ./gradlew publish
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
